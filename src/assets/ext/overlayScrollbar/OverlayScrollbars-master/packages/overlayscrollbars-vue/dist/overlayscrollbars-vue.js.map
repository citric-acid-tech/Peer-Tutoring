{"version":3,"file":"overlayscrollbars-vue.js","sources":["../src/OverlayScrollbarsComponent.vue","../node_modules/vue-runtime-helpers/dist/normalize-component.js","../src/OverlayScrollbarsPlugin.ts"],"sourcesContent":["<template>\n    <div>\n        <slot></slot>\n    </div>\n</template>\n\n<script lang=\"ts\">\nimport Vue, { VueConstructor, VNode, CreateElement, PropType } from 'vue';\nimport OverlayScrollbars from 'overlayscrollbars';\nimport {\n    OverlayScrollbarsComponentData,\n    OverlayScrollbarsComponentMethods,\n    OverlayScrollbarsComponentComputed,\n    OverlayScrollbarsComponentProps\n} from './OverlayScrollbarsComponent';\n\n// https://github.com/vuejs/vue/issues/7060\nexport default class OverlayScrollbarsComponent extends Vue.extend<\n    OverlayScrollbarsComponentData,\n    OverlayScrollbarsComponentMethods,\n    OverlayScrollbarsComponentComputed,\n    OverlayScrollbarsComponentProps\n    >({\n        name: 'overlay-scrollbars', // https://vuejs.org/v2/guide/components-registration.html#Component-Names\n        props: {\n            options: {\n                type: Object as PropType<OverlayScrollbars.Options>\n            },\n            extensions: {\n                type: [String, Array, Object] as PropType<OverlayScrollbars.Extensions>\n            }\n        },\n        methods: {\n            osInstance(): OverlayScrollbars | null {\n                return (this as OverlayScrollbarsComponent)._osInstace;\n            },\n            osTarget(): HTMLDivElement | null {\n                return (this.$el as HTMLDivElement) || null;\n            }\n        },\n        watch: {\n            options(\n                currOptions: OverlayScrollbars.Options,\n                oldOptions: OverlayScrollbars.Options\n            ) {\n                let osInstance = (this as OverlayScrollbarsComponent)._osInstace;\n                if (OverlayScrollbars.valid(osInstance)) {\n                    osInstance.options(currOptions);\n                }\n            }\n        },\n\n        data() {\n            return {};\n        },\n\n        mounted() {\n            (this as OverlayScrollbarsComponent)._osInstace = OverlayScrollbars(\n                this.osTarget(),\n                this.options || {},\n                this.extensions\n            );\n        },\n\n        beforeDestroy() {\n            let osInstance = (this as OverlayScrollbarsComponent)._osInstace;\n            if (OverlayScrollbars.valid(osInstance)) {\n                osInstance.destroy();\n                (this as OverlayScrollbarsComponent)._osInstace = null;\n            }\n        }\n    }) {\n    private _osInstace: OverlayScrollbars | null = null;\n}\n</script>","'use strict';\n\nfunction normalizeComponent(template, style, script, scopeId, isFunctionalTemplate, moduleIdentifier\n/* server only */\n, shadowMode, createInjector, createInjectorSSR, createInjectorShadow) {\n  if (typeof shadowMode !== 'boolean') {\n    createInjectorSSR = createInjector;\n    createInjector = shadowMode;\n    shadowMode = false;\n  } // Vue.extend constructor export interop.\n\n\n  var options = typeof script === 'function' ? script.options : script; // render functions\n\n  if (template && template.render) {\n    options.render = template.render;\n    options.staticRenderFns = template.staticRenderFns;\n    options._compiled = true; // functional template\n\n    if (isFunctionalTemplate) {\n      options.functional = true;\n    }\n  } // scopedId\n\n\n  if (scopeId) {\n    options._scopeId = scopeId;\n  }\n\n  var hook;\n\n  if (moduleIdentifier) {\n    // server build\n    hook = function hook(context) {\n      // 2.3 injection\n      context = context || // cached call\n      this.$vnode && this.$vnode.ssrContext || // stateful\n      this.parent && this.parent.$vnode && this.parent.$vnode.ssrContext; // functional\n      // 2.2 with runInNewContext: true\n\n      if (!context && typeof __VUE_SSR_CONTEXT__ !== 'undefined') {\n        context = __VUE_SSR_CONTEXT__;\n      } // inject component styles\n\n\n      if (style) {\n        style.call(this, createInjectorSSR(context));\n      } // register component module identifier for async chunk inference\n\n\n      if (context && context._registeredComponents) {\n        context._registeredComponents.add(moduleIdentifier);\n      }\n    }; // used by ssr in case component is cached and beforeCreate\n    // never gets called\n\n\n    options._ssrRegister = hook;\n  } else if (style) {\n    hook = shadowMode ? function () {\n      style.call(this, createInjectorShadow(this.$root.$options.shadowRoot));\n    } : function (context) {\n      style.call(this, createInjector(context));\n    };\n  }\n\n  if (hook) {\n    if (options.functional) {\n      // register for functional component in vue file\n      var originalRender = options.render;\n\n      options.render = function renderWithStyleInjection(h, context) {\n        hook.call(context);\n        return originalRender(h, context);\n      };\n    } else {\n      // inject component registration as beforeCreate hook\n      var existing = options.beforeCreate;\n      options.beforeCreate = existing ? [].concat(existing, hook) : [hook];\n    }\n  }\n\n  return script;\n}\n\nmodule.exports = normalizeComponent;\n//# sourceMappingURL=normalize-component.js.map\n","import { VueConstructor, PluginObject } from 'vue';\nimport OverlayScrollbars from 'overlayscrollbars';\nimport OverlayScrollbarsComponent from './OverlayScrollbarsComponent.vue';\n\nexport const OverlayScrollbarsPlugin: PluginObject<OverlayScrollbars.Options> = {\n    install(vue: VueConstructor, options?: OverlayScrollbars.Options) {\n        if (options) {\n            OverlayScrollbars.defaultOptions(options);\n        }\n\n        vue.component('overlay-scrollbars', OverlayScrollbarsComponent);\n    }\n}"],"names":["OverlayScrollbarsComponent"],"mappings":"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"}